/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./src/css/style.css":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader!./src/css/style.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"html {\\r\\n    position: relative;\\r\\n    min-height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    /* Margin bottom by footer height */\\r\\n    /* margin-bottom: 60px; */\\r\\n}\\r\\n\\r\\n.svg-container {\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    /* aspect ratio */\\r\\n    vertical-align: top;\\r\\n    overflow: visible;\\r\\n}\\r\\n\\r\\n.axis {\\r\\n    stroke-width: 0.5px;\\r\\n    stroke: #888;\\r\\n    font: 10px avenir next, sans-serif;\\r\\n}\\r\\n\\r\\n.axis>path {\\r\\n    stroke: #888;\\r\\n}\\r\\n\\r\\n.zoom {\\r\\n    cursor: move;\\r\\n    fill: none;\\r\\n    pointer-events: all;\\r\\n}\\r\\n\\r\\n.timeseriesline {\\r\\n    fill: none;\\r\\n    stroke: steelblue;\\r\\n    stroke-width: 1.5px;\\r\\n}\\r\\n\\r\\n#metadata-river-network>svg:nth-child(1) {\\r\\n    border: 1px solid black;\\r\\n    stroke: #737373;\\r\\n    stroke-width: 2px;\\r\\n}\\r\\n\\r\\n.highlight {\\r\\n    border: 5px solid black;\\r\\n}\\r\\n\\r\\n.modal-lg {\\r\\n    max-width: 95%;\\r\\n}\\r\\n\\r\\n.blank-row {\\r\\n    height: 15px !important;\\r\\n    /* overwrites any other rules */\\r\\n    background-color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.timeline {\\r\\n    fill: none;\\r\\n    stroke: steelblue;\\r\\n    stroke-width: 1.5px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack:///./src/css/style.css?./node_modules/css-loader");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader!./style.css */ \"./node_modules/css-loader/index.js!./src/css/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/css/style.css?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _load_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load-data.js */ \"./src/js/load-data.js\");\n/* harmony import */ var _sampling_strategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sampling-strategy.js */ \"./src/js/sampling-strategy.js\");\n/* harmony import */ var _timeseries_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeseries.js */ \"./src/js/timeseries.js\");\n/* harmony import */ var _metadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./metadata.js */ \"./src/js/metadata.js\");\n/* harmony import */ var _tsne_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tsne.js */ \"./src/js/tsne.js\");\n/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../css/style.css */ \"./src/css/style.css\");\n/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_css_style_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/* harmony import */ var _statistics_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./statistics.js */ \"./src/js/statistics.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global $*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$(document).ready(function() {\r\n    let path = './data/data.json';\r\n    Object(_load_data_js__WEBPACK_IMPORTED_MODULE_0__[\"parseDataJSON\"])(path);\r\n    path = './data/metadata.json';\r\n    Object(_load_data_js__WEBPACK_IMPORTED_MODULE_0__[\"parseMetadataJSON\"])(path);\r\n    path = './data/tsne_data3.csv';\r\n    Object(_load_data_js__WEBPACK_IMPORTED_MODULE_0__[\"parseTSNEData\"])(path);\r\n\r\n    initVis();\r\n});\r\n\r\n/**\r\n * Init the visualizations\r\n */\r\nfunction initVis() {\r\n    setTimeout(function() {\r\n        if (Object(_data_js__WEBPACK_IMPORTED_MODULE_6__[\"getData\"])() && Object(_data_js__WEBPACK_IMPORTED_MODULE_6__[\"getMetaData\"])() && Object(_data_js__WEBPACK_IMPORTED_MODULE_6__[\"getDataMeasurements\"])() && Object(_data_js__WEBPACK_IMPORTED_MODULE_6__[\"getTSNEData\"])()) {\r\n            // init the different visualizations after the\r\n            // succesfully loading the data\r\n            // console.log(data);\r\n            // console.log(metadata);\r\n            // console.log(dataMeasurements);\r\n            Object(_sampling_strategy_js__WEBPACK_IMPORTED_MODULE_1__[\"initSamplingStrategy\"])('#sampling-stragety-div');\r\n            Object(_timeseries_js__WEBPACK_IMPORTED_MODULE_2__[\"initTimeSeries\"])();\r\n            Object(_tsne_js__WEBPACK_IMPORTED_MODULE_4__[\"initTSNE\"])('#t-sne-vis');\r\n            Object(_metadata_js__WEBPACK_IMPORTED_MODULE_3__[\"initMetadata\"])();\r\n            return;\r\n        }\r\n        initVis();\r\n    }, 500);\r\n}\n\n//# sourceURL=webpack:///./src/js/app.js?");

/***/ }),

/***/ "./src/js/data.js":
/*!************************!*\
  !*** ./src/js/data.js ***!
  \************************/
/*! exports provided: getData, setData, getMetaData, setMetaData, getDataMeasurements, updateDataMeasurements, getStatisticData, getTimeSeriesData, setDataMeasurements, setTSNEData, getTSNEData, getSelectedLocations, setSelectedLocations, getSelectedMeasurements, setSelectedMeasurements, getCurrentMinMax, setCurrentMinMax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getData\", function() { return getData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setData\", function() { return setData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMetaData\", function() { return getMetaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMetaData\", function() { return setMetaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDataMeasurements\", function() { return getDataMeasurements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateDataMeasurements\", function() { return updateDataMeasurements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStatisticData\", function() { return getStatisticData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTimeSeriesData\", function() { return getTimeSeriesData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setDataMeasurements\", function() { return setDataMeasurements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTSNEData\", function() { return setTSNEData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTSNEData\", function() { return getTSNEData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSelectedLocations\", function() { return getSelectedLocations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSelectedLocations\", function() { return setSelectedLocations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSelectedMeasurements\", function() { return getSelectedMeasurements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSelectedMeasurements\", function() { return setSelectedMeasurements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCurrentMinMax\", function() { return getCurrentMinMax; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setCurrentMinMax\", function() { return setCurrentMinMax; });\n/* harmony import */ var _sampling_strategy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sampling-strategy */ \"./src/js/sampling-strategy.js\");\n/* harmony import */ var _timeseries_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeseries.js */ \"./src/js/timeseries.js\");\n/* harmony import */ var _tsne_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tsne.js */ \"./src/js/tsne.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global $, d3*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet data; // the basic data with the extracted features\r\nlet metadata; // basic metadata - see metadata json file\r\nlet dataMeasurements; // measurements per day per location\r\nlet tSNEData; // tSNE data\r\n\r\nlet selectedLocations; // used for filters\r\nlet selectedMeasurements;\r\n\r\nlet currentMinMax; // current min max date of the specific zoom level\r\n\r\n/** Getter and Setter ** /\r\n\r\n/**\r\n * Get data variable\r\n */\r\nfunction getData() {\r\n    return data;\r\n}\r\n\r\n/**\r\n * Set the parsed csv data\r\n */\r\nfunction setData(d) {\r\n    data = d;\r\n    // compute for the first time the measurements per day\r\n    updateDataMeasurements();\r\n}\r\n\r\n/**\r\n * Get the metadata\r\n */\r\nfunction getMetaData() {\r\n    return metadata;\r\n}\r\n\r\n/**\r\n * Set the metadata variable\r\n */\r\nfunction setMetaData(d) {\r\n    metadata = d;\r\n    selectedLocations = metadata['locations'];\r\n    selectedMeasurements = Object.keys(metadata['measureUnit']);\r\n    // set min max for the overall time slot\r\n    let parseTime = d3.timeParse('%Y-%m-%d');\r\n    currentMinMax = [parseTime(metadata['date']['min']), parseTime(metadata['date']['max'])];\r\n}\r\n\r\n/**\r\n * Get parsed csv data measurements\r\n */\r\nfunction getDataMeasurements() {\r\n    return dataMeasurements.filter(d => d['date'] >= currentMinMax[0] && d['date'] <= currentMinMax[1]);\r\n}\r\n\r\nfunction updateDataMeasurements() {\r\n    let tmp_result = {};\r\n    let parseTime = d3.timeParse('%Y-%m-%d');\r\n    // filter using selected Measurements and selected Locations\r\n    let tmpData = Object.keys(data)\r\n        .filter(key => selectedMeasurements.includes(key))\r\n        .reduce((obj, key) => {\r\n            obj[key] = data[key]['values'];\r\n            obj[key] = Object.keys(obj[key])\r\n                .filter(key2 => selectedLocations.includes(key2))\r\n                .reduce((obj2, key2) => {\r\n                    obj2[key2] = obj[key][key2];\r\n                    return obj2;\r\n                }, {});\r\n            return obj;\r\n        }, {});\r\n    // console.log(tmpData);\r\n    // count the number of measurements per day\r\n    for (let key in tmpData) {\r\n        // console.log(key);\r\n        for (let key2 in tmpData[key]) {\r\n            if (!tmp_result.hasOwnProperty(key2)) {\r\n                tmp_result[key2] = {};\r\n            }\r\n            tmpData[key][key2].forEach(function(d) {\r\n                // count number of measurements\r\n                if (!tmp_result[key2].hasOwnProperty(d['time'])) {\r\n                    tmp_result[key2][d['time']] = {};\r\n                    tmp_result[key2][d['time']]['count'] = 0;\r\n                    // add the chemical measurement\r\n                    tmp_result[key2][d['time']]['measurements'] = {};\r\n                    tmp_result[key2][d['time']]['measurements'][key] = [d['value']];\r\n                } else {\r\n                    tmp_result[key2][d['time']]['count']++;\r\n                    // add the chemical measurement\r\n                    if (tmp_result[key2][d['time']]['measurements'].hasOwnProperty(key)) {\r\n                        tmp_result[key2][d['time']]['measurements'][key].push(d['value']);\r\n                    } else {\r\n                        tmp_result[key2][d['time']]['measurements'][key] = [d['value']];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // console.log(tmp_result);\r\n    // change data format into list of objects\r\n    let result = [];\r\n    for (let key in tmp_result) {\r\n        for (let key2 in tmp_result[key]) {\r\n            result.push({\r\n                'location': key,\r\n                'date': parseTime(key2),\r\n                'count': tmp_result[key][key2]['count'],\r\n                'measurements': tmp_result[key][key2]['measurements']\r\n            });\r\n        }\r\n    }\r\n    setDataMeasurements(result);\r\n    // console.log(result);\r\n}\r\n\r\n/**\r\n * Get parsed csv data measurements\r\n */\r\nfunction getStatisticData() {\r\n    let stats = [\r\n        'length', 'mean', 'median', 'maximum', 'minimum', 'kurtosis', 'skewness',\r\n        'variance', 'abs_energy', 'mean_change', 'sample_entropy', 'count_above_mean',\r\n        'count_below_mean', 'standard_deviation', 'sum_of_reoccurring_data_points',\r\n        'variance_larger_than_standard_deviation', 'ratio_value_number_to_time_series_length'\r\n    ];\r\n    // filter with the selected measurements and locations\r\n    let tmp_result = {};\r\n    for (let key in data) {\r\n        if (selectedMeasurements.includes(key)) {\r\n            tmp_result[key] = {};\r\n            stats.forEach(function(d) {\r\n                let stat = data[key]['features_w_null_relevant'][d];\r\n                // filter the locations which are not selected\r\n                stat = Object.keys(stat)\r\n                    .filter(key2 => selectedLocations.includes(key2))\r\n                    .reduce((obj, key2) => {\r\n                        obj[key2] = stat[key2];\r\n                        return obj;\r\n                    }, {});\r\n                tmp_result[key][d] = stat;\r\n            });\r\n        }\r\n    }\r\n    // change data format\r\n    let tmp_result2 = {};\r\n    for (let key in tmp_result) { // key = measurement\r\n        tmp_result2[key] = {};\r\n        for (let key2 in tmp_result[key]) { // extracted statistic\r\n            for (let key3 in tmp_result[key][key2]) { // extracted statistic\r\n                if (key3 in tmp_result2[key]) {\r\n                    tmp_result2[key][key3][key2] = tmp_result[key][key2][key3];\r\n                } else {\r\n                    tmp_result2[key][key3] = {};\r\n                    tmp_result2[key][key3][key2] = tmp_result[key][key2][key3];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // change the data format again to a array of arrays\r\n    let result = [];\r\n    for (let key in tmp_result2) {\r\n        for (let key2 in tmp_result2[key]) {\r\n            let tmp_array = [key, key2];\r\n            stats.forEach(function(d) {\r\n                tmp_array.push(tmp_result2[key][key2][d]);\r\n            });\r\n            result.push(tmp_array);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\n/**\r\n * Get parsed csv data measurements\r\n * @param {String} measurement - chemical measurement\r\n */\r\nfunction getTimeSeriesData(measurement) {\r\n    let parseTime = d3.timeParse('%Y-%m-%d');\r\n    let result = [];\r\n    for (let key in data[measurement]['values']) {\r\n        data[measurement]['values'][key].forEach(function(d) {\r\n            d['location'] = key;\r\n            d['date'] = parseTime(d['time']);\r\n            result.push(d);\r\n        });\r\n    }\r\n    result = result.filter(d => d['date'] >= getCurrentMinMax()[0] &&\r\n        d['date'] <= getCurrentMinMax()[1] &&\r\n        selectedLocations.includes(d['location']));\r\n\r\n    return result;\r\n}\r\n/**\r\n * Set dataMeasurements variable\r\n */\r\nfunction setDataMeasurements(d) {\r\n    dataMeasurements = d;\r\n    if ($('#sampling-stragety-div > svg').length) {\r\n        Object(_sampling_strategy__WEBPACK_IMPORTED_MODULE_0__[\"draw\"])();\r\n        Object(_tsne_js__WEBPACK_IMPORTED_MODULE_2__[\"updateTSNE\"])();\r\n    }\r\n    // console.log(dataMeasurements.length);\r\n}\r\n\r\nfunction setTSNEData(d) {\r\n    tSNEData = d;\r\n}\r\n\r\nfunction getTSNEData() {\r\n    let measurementsDates = getDataMeasurements();\r\n    measurementsDates = measurementsDates.map(function(d) {\r\n        return d['date'].getTime();\r\n    });\r\n    // let filterDates = dataMeasurements\r\n    return tSNEData.filter(d => measurementsDates.includes(d['date'].getTime()) &&\r\n        selectedLocations.includes(d['location']));\r\n    // d['date'] >= currentMinMax[0] &&\r\n    // d['date'] <= currentMinMax[1] &&\r\n    // selectedLocations.includes(d['location']) &&\r\n\r\n}\r\n\r\n/**\r\n * Get selectedLocations\r\n */\r\nfunction getSelectedLocations() {\r\n    return selectedLocations;\r\n}\r\n\r\n/**\r\n * Set the selectedLocations\r\n */\r\nfunction setSelectedLocations(d) {\r\n    selectedLocations = d;\r\n    // compute for the first time the measurements per day\r\n    updateDataMeasurements();\r\n    if (!$('#time-series-div').hasClass('d-none')) {\r\n        Object(_timeseries_js__WEBPACK_IMPORTED_MODULE_1__[\"updateTimeSeries\"])();\r\n    }\r\n}\r\n\r\n/**\r\n * Get selectedMeasurements\r\n */\r\nfunction getSelectedMeasurements() {\r\n    return selectedMeasurements;\r\n}\r\n\r\n/**\r\n * Set the selectedMeasurements\r\n */\r\nfunction setSelectedMeasurements(d) {\r\n    selectedMeasurements = d;\r\n    // compute for the first time the measurements per day\r\n    updateDataMeasurements();\r\n}\r\n\r\n/**\r\n * Get currentMinMax\r\n */\r\nfunction getCurrentMinMax() {\r\n    return currentMinMax;\r\n}\r\n\r\n/**\r\n * Set the currentMinMax\r\n */\r\nfunction setCurrentMinMax(d) {\r\n    currentMinMax = d;\r\n    // draw the sampling strategy vis\r\n    Object(_sampling_strategy__WEBPACK_IMPORTED_MODULE_0__[\"draw\"])();\r\n    Object(_tsne_js__WEBPACK_IMPORTED_MODULE_2__[\"updateTSNE\"])();\r\n    // check if time series is visible and update\r\n    if (!$('#time-series-div').hasClass('d-none')) {\r\n        Object(_timeseries_js__WEBPACK_IMPORTED_MODULE_1__[\"updateTimeSeries\"])();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/data.js?");

/***/ }),

/***/ "./src/js/load-data.js":
/*!*****************************!*\
  !*** ./src/js/load-data.js ***!
  \*****************************/
/*! exports provided: parseDataJSON, parseMetadataJSON, parseTSNEData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseDataJSON\", function() { return parseDataJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseMetadataJSON\", function() { return parseMetadataJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseTSNEData\", function() { return parseTSNEData; });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global d3*/\r\n\r\n\r\n\r\n\r\n/**\r\n * Parse the data and load it into the data object\r\n * @param {String} path - path to json file\r\n */\r\nfunction parseDataJSON(path) {\r\n    d3.json(path).then(function(d) {\r\n        Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setData\"])(d);\r\n    }, function() {\r\n        alert('Could not load input json for the data');\r\n    });\r\n}\r\n\r\n/**\r\n * Parse the meta data and load it into the meta data object\r\n * @param {String} path - path to json file\r\n */\r\nfunction parseMetadataJSON(path) {\r\n    d3.json(path).then(function(d) {\r\n        // console.log(d);\r\n        Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setMetaData\"])(d);\r\n    }, function() {\r\n        alert('Could not load input json for the metadata');\r\n    });\r\n}\r\n\r\n/**\r\n * Parse the tsne data and load it into the tsne object\r\n * @param {String} path - path to json file\r\n */\r\nfunction parseTSNEData(path) {\r\n    d3.csv(path)\r\n        .then(function(tsne) {\r\n            let dateparser = d3.timeParse('%Y-%m-%d');\r\n\r\n            tsne.forEach(function(d) {\r\n                d['date'] = dateparser(d['date']);\r\n                d.x = +d.x;\r\n                d.y = +d.y;\r\n            });\r\n            Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setTSNEData\"])(tsne);\r\n        });\r\n\r\n}\n\n//# sourceURL=webpack:///./src/js/load-data.js?");

/***/ }),

/***/ "./src/js/metadata.js":
/*!****************************!*\
  !*** ./src/js/metadata.js ***!
  \****************************/
/*! exports provided: initMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initMetadata\", function() { return initMetadata; });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global d3, $*/\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet metadata;\r\n\r\n// static color mapping to the d3.schemeCategory10 -\r\n// making it independet of the order of objects\r\nlet ordinalColorScheme = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n\r\n/**\r\n * Initialize the div with the svg element\r\n */\r\nfunction initMetadata() {\r\n    metadata = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getMetaData\"])();\r\n    ordinalColorScheme.domain(metadata['locations']);\r\n\r\n    // append the metadata locations list\r\n    let metadataOptions = metadata['locations'].map(function(d) {\r\n        return '<option>' + d + '</option>';\r\n    }).join();\r\n    $('#metadata-locations')\r\n        .append(metadataOptions)\r\n        .selectpicker('refresh')\r\n        .selectpicker('selectAll');\r\n\r\n\r\n    // metadataMeasurements\r\n    metadataOptions = Object.keys(metadata['measureUnit']).map(function(d) {\r\n        return '<option>' + d + '</option>';\r\n    }).join();\r\n    $('#metadata-measurements')\r\n        .append(metadataOptions)\r\n        .selectpicker('refresh')\r\n        .selectpicker('selectAll');\r\n\r\n    // append the river network chart\r\n    let height = 200,\r\n        width = 200;\r\n    let networkSVG = d3.select('#metadata-river-network')\r\n        .append('svg')\r\n        .attr('height', height)\r\n        .attr('width', width);\r\n    let nodes = metadata['locationsRelationships']['nodes'];\r\n    let links = metadata['locationsRelationships']['links'];\r\n\r\n    networkSVG.append('svg:defs').append('svg:marker')\r\n        .attr('id', 'arrow')\r\n        .attr('viewBox', '0 -5 10 10')\r\n        .attr('refX', -20) //so that it comes towards the center.\r\n        .attr('markerWidth', 8)\r\n        .attr('markerHeight', 8)\r\n        .attr('orient', 'auto')\r\n        .append('svg:path')\r\n        .attr('d', 'M0,-5L10,0L0,5');\r\n\r\n    // append links\r\n    networkSVG.append('g')\r\n        .attr('stroke', '#000')\r\n        .attr('stroke-width', 1.5)\r\n        .selectAll('line')\r\n        .data(links)\r\n        .enter().append('line')\r\n        .attr('x1', function(d) {\r\n            return d.source[0];\r\n        })\r\n        .attr('y1', function(d) {\r\n            return d.source[1];\r\n        })\r\n        .attr('x2', function(d) {\r\n            return d.target[0];\r\n        })\r\n        .attr('y2', function(d) {\r\n            return d.target[1];\r\n        })\r\n        .attr('marker-start', 'url(#arrow)');\r\n\r\n    // append nodes\r\n    networkSVG.append('g')\r\n        .selectAll('circle')\r\n        .data(nodes)\r\n        .enter().append('circle')\r\n        .style('fill', function(d) {\r\n            return ordinalColorScheme(d['location']);\r\n        })\r\n        .attr('cx', function(d) {\r\n            return d.x;\r\n        })\r\n        .attr('cy', function(d) {\r\n            return d.y;\r\n        })\r\n        .attr('r', 10)\r\n        .on('mouseover', function(d) {\r\n            d3.select(this).attr('r', 20);\r\n            $('#badge-' + d['location']).addClass('highlight');\r\n        })\r\n        .on('mouseout', function(d) {\r\n            d3.select(this).attr('r', 10);\r\n            $('#badge-' + d['location']).removeClass('highlight');\r\n        })\r\n        .on('click', function(d) {\r\n            let selected = $('#metadata-locations').val();\r\n            if (selected.includes(d['location'])) {\r\n                selected = selected.filter(function(item) {\r\n                    return item !== d['location'];\r\n                });\r\n            } else {\r\n                selected.push(d['location']);\r\n            }\r\n            $('#metadata-locations').selectpicker('val', selected);\r\n        });\r\n\r\n    networkSVG.append('path')\r\n        .style('fill', '#000')\r\n        .attr('d', d3.symbol()\r\n            .size(100)\r\n            .type(d3.symbolStar))\r\n        .attr('transform', 'translate(150, 30)')\r\n        // .append('rect')\r\n        // .attr('width', 20)\r\n        // .attr('height', 20)\r\n        // .style('fill', )\r\n        .on('mouseover', function() {\r\n            $('#metadata-info').append('<span class=\"badge badge-dark\">Approximate location of waste dumping</span>');\r\n        })\r\n        .on('mouseout', function() {\r\n            setTimeout(function() {\r\n                $('#metadata-info').empty();\r\n            }, 2000);\r\n            // $('#metadata-info').delay(1000).empty();\r\n        });\r\n\r\n\r\n\r\n    // append the color legend\r\n    metadata['locations'].forEach(function(d) {\r\n        $('#metadata-legend').append(' <span id=\"badge-' + d + '\" class=\"badge\" style=\"background: ' + ordinalColorScheme(d) + ';\">' + d + '</span> ');\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * On click listener for the metadata location select field\r\n */\r\n$('#metadata-locations').on('change', function() {\r\n    let selected = $.map($(this).find('option:selected'), function(o) {\r\n        return o['label'];\r\n    });\r\n    Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setSelectedLocations\"])(selected);\r\n});\r\n\r\n/**\r\n * On click listener for the metadata measurements select field\r\n */\r\n$('#metadata-measurements').on('change', function() {\r\n    $('#time-series-div').addClass('d-none');\r\n    let selected = $.map($(this).find('option:selected'), function(o) {\r\n        return o['label'];\r\n    });\r\n    Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setSelectedMeasurements\"])(selected);\r\n});\r\n\r\n$(function() {\r\n    $('[rel=\"tooltip\"]').tooltip();\r\n});\n\n//# sourceURL=webpack:///./src/js/metadata.js?");

/***/ }),

/***/ "./src/js/sampling-strategy.js":
/*!*************************************!*\
  !*** ./src/js/sampling-strategy.js ***!
  \*************************************/
/*! exports provided: initSamplingStrategy, draw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initSamplingStrategy\", function() { return initSamplingStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"draw\", function() { return draw; });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global d3, $*/\r\n\r\n\r\n\r\n\r\nlet svg, g; // svg for the sampling strategy vis\r\nlet x, x2, y, xAxis, yAxis, gXaxis; //  define scales and axis\r\nlet data;\r\n\r\nlet width, height,\r\n    margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 70\r\n    };\r\n\r\n// static color mapping to the d3.schemeCategory10 -\r\n// making it independet of the order of objects\r\nlet ordinalColorScheme = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\nlet globalScale;\r\nlet localScales = {};\r\n\r\n/**\r\n * Initialize the div with the svg element\r\n * @param {String} domSelector - To which svg to append the svg\r\n */\r\nfunction initSamplingStrategy(domSelector) {\r\n    // console.log(domSelector);\r\n    width = $(domSelector).width() - margin.left;\r\n    height = 250; // $(domSelector).height() * 0.8 - margin.bottom;\r\n\r\n    // init the zoom\r\n    let zoom = d3.zoom()\r\n        .scaleExtent([1, 100])\r\n        .translateExtent([\r\n            [0, 0],\r\n            [width, height]\r\n        ])\r\n        .extent([\r\n            [0, 0],\r\n            [width, height]\r\n        ])\r\n        .on('zoom', function() {\r\n            let t = d3.event.transform;\r\n            // change scaling function\r\n            Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setCurrentMinMax\"])(t.rescaleX(x2).domain());\r\n        });\r\n\r\n    // create the svg\r\n    svg = d3.select(domSelector)\r\n        .classed('svg-container', true)\r\n        // to make it responsive with css\r\n        .append('svg')\r\n        .attr('height', height)\r\n        .attr('width', width)\r\n        .call(zoom);\r\n\r\n    // append a group for the elements\r\n    g = svg.append('g')\r\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n    width = width * 0.9;\r\n    height = height * 0.9;\r\n\r\n    // get min max\r\n    let metadata = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getMetaData\"])();\r\n    // get ordinal values for y axis\r\n    let yDomain = metadata['locations'];\r\n\r\n    // define the scales\r\n    x = d3.scaleTime().domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])()).range([0, width]);\r\n    x2 = d3.scaleTime().domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])()).range([0, width]);\r\n    y = d3.scalePoint().domain(yDomain).range([0, height - 10]);\r\n\r\n    xAxis = d3.axisBottom(x).tickSize(0);\r\n    yAxis = d3.axisLeft(y).tickSize(0);\r\n\r\n    // append the axis\r\n    gXaxis = g.append('g')\r\n        .attr('class', 'axis x-axis')\r\n        .attr('transform', 'translate(0,' + height + ')')\r\n        .call(xAxis);\r\n\r\n    g.append('g')\r\n        .attr('class', 'axis axis--y')\r\n        .call(yAxis);\r\n\r\n\r\n    // get the data\r\n    data = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getDataMeasurements\"])();\r\n\r\n    // define global and local opacity scales for the coloring of the circle\r\n    // console.log(data);\r\n    let globalMinMaxCount = [d3.min(data, function(d) {\r\n            return d['count'];\r\n        }),\r\n        d3.max(data, function(d) {\r\n            return d['count'];\r\n        })\r\n    ];\r\n    // the global scale\r\n    globalScale = d3.scaleLinear()\r\n        .domain(globalMinMaxCount)\r\n        .range([0.2, 1]);\r\n\r\n    // the local scales\r\n    let localMinMax = {};\r\n    data.forEach(function(d) {\r\n        if (!(d['location'] in localMinMax)) {\r\n            localMinMax[d['location']] = [d['count'], d['count']];\r\n        }\r\n        if (d['count'] < localMinMax[d['location']][0]) {\r\n            localMinMax[d['location']][0] = d['count'];\r\n        }\r\n        if (d['count'] > localMinMax[d['location']][1]) {\r\n            localMinMax[d['location']][1] = d['count'];\r\n        }\r\n    });\r\n\r\n    for (let key in localMinMax) {\r\n        localScales[key] = d3.scaleLinear()\r\n            .domain(localMinMax[key])\r\n            .range([0.2, 1]);\r\n    }\r\n    // define the color scheme\r\n    ordinalColorScheme.domain(metadata['locations']);\r\n\r\n    draw();\r\n}\r\n\r\n\r\n\r\n/**\r\n * Draw function\r\n */\r\nfunction draw() {\r\n    data = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getDataMeasurements\"])();\r\n    // preprocess the data correctly\r\n\r\n    let binnedData = [];\r\n    // aggregate to 100 circles per x-axis\r\n    // console.log($('#sampling-stragety-aggregate-buttons').hasClass('active'));\r\n    if ($('#sampling-stragety-aggregate-buttons').hasClass('active')) {\r\n        binnedData = binData(data, 50);\r\n    } else {\r\n        binnedData = data;\r\n    }\r\n\r\n    // update the x scaling\r\n    x.domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])());\r\n\r\n    // DATA JOIN -- sampling circles\r\n    let samplingCircles = g.selectAll('circle')\r\n        .data(binnedData);\r\n    // UPDATE -- sampling circles\r\n    samplingCircles\r\n        .enter().append('circle')\r\n        .merge(samplingCircles)\r\n        .attr('r', 5)\r\n        .attr('cx', function(d) {\r\n            return x(d['date']);\r\n        })\r\n        .attr('cy', function(d) {\r\n            return y(d['location']);\r\n        })\r\n        .attr('class', function(d) {\r\n            return 'c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate();\r\n        })\r\n        .style('fill', function(d) {\r\n            return ordinalColorScheme(d['location']);\r\n        })\r\n        .style('opacity', function(d) {\r\n            if ($('#global-scale').is(':checked')) {\r\n                return globalScale(d['count']);\r\n            } else {\r\n                return localScales[d['location']](d['count']);\r\n            }\r\n        })\r\n        .style('stroke', '#737373')\r\n        .style('stroke-width', 0.5)\r\n        .on('mouseover', function(d) {\r\n            d3.selectAll('.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate())\r\n                .attr('r', 20)\r\n                .style('stroke', '#737373')\r\n                .style('stroke-width', 2);\r\n            let measurements = d['measurements'];\r\n            if (typeof measurements === 'object') {\r\n\r\n                for (let key in measurements) {\r\n                    $('#metadata-info').append('<span class=\"badge badge-dark\">' + key + ': ' + measurements[key].join(' ; ') + '</span>');\r\n                }\r\n            } else {\r\n                $('#metadata-info').append('<span class=\"badge badge-dark\">' + measurements + '</span>');\r\n            }\r\n        })\r\n        .on('mouseout', function(d) {\r\n            d3.selectAll('.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate())\r\n                .attr('r', 4)\r\n                .style('stroke', '#737373')\r\n                .style('stroke-width', 0.5);\r\n            $('#metadata-info').empty();\r\n        })\r\n        .on('click', function(d) {\r\n            if (typeof d['measurements'] === 'object') {\r\n                let selected = Object.keys(d['measurements']);\r\n                $('#metadata-measurements').selectpicker('val', selected);\r\n            }\r\n        });\r\n\r\n    // EXIT\r\n    samplingCircles.exit().remove();\r\n\r\n    // update x axis\r\n    gXaxis.call(xAxis);\r\n}\r\n\r\n/**\r\n * Jquery on change listeners\r\n * Update from global to local scale and vise versa\r\n */\r\n$('#sampling-stragety-scale-buttons :input').change(function() {\r\n    draw();\r\n});\r\n\r\n/**\r\n * Jquery on change listeners\r\n * Update change from aggregated version to all version\r\n */\r\n$('#sampling-stragety-aggregate-buttons').on('click', function() {\r\n    // two toggles are just a fix - change code\r\n    $('#sampling-stragety-aggregate-buttons').toggleClass('active');\r\n    draw();\r\n    $('#sampling-stragety-aggregate-buttons').toggleClass('active');\r\n\r\n});\r\n\r\n/**\r\n * Bin the data by the zoom level\r\n * @param {array} dat - Array of objects\r\n * @param {number} max - maximum number of elements per axis\r\n */\r\nfunction binData(filteredData, max) {\r\n    let result = [];\r\n    // group by location\r\n    let grouped = groupBy(filteredData, 'location');\r\n    // aggregate and average the objects\r\n    for (let key in grouped) {\r\n        // if the group has more than max elements\r\n        if (grouped[key].length > max) {\r\n            let ratio = Math.ceil(grouped[key].length / max);\r\n            // sort the subgroup by the date\r\n            let sortedTmp = grouped[key].sort(function(a, b) {\r\n                if (a['date'] < b['date']) {\r\n                    return -1;\r\n                }\r\n                if (a['date'] > b['date']) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n            // temp element needed to store max elements and aggregate these elements\r\n            let tmp = [sortedTmp[0]];\r\n            // aggregate and average\r\n            for (let i = 1; i < sortedTmp.length; i++) {\r\n                if (i % ratio === 0) {\r\n                    result.push(aggregateMean(tmp));\r\n                    tmp = [];\r\n                } else {\r\n                    tmp.push(sortedTmp[i]);\r\n                }\r\n            }\r\n            if (tmp.length) {\r\n                result.push(aggregateMean(tmp));\r\n            }\r\n        }\r\n        // less than max elements therefore no binning is needed\r\n        else {\r\n            result = result.concat(grouped[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Helper function to group an array of objects by a key\r\n * @param {array} xs\r\n * @param {string} key\r\n */\r\nfunction groupBy(xs, key) {\r\n    return xs.reduce(function(rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n    }, {});\r\n}\r\n\r\n/**\r\n * Helper function to aggregate and average an array of objects\r\n */\r\nfunction aggregateMean(d) {\r\n    let location = d[0]['location'];\r\n    // average date with a d3 scale\r\n    let date = d3.scaleTime().domain([0, 1]).range([d[0]['date'], d[d.length - 1]['date']])(0.5);\r\n    // aggregate and average the number of countes elements\r\n    let count = d.reduce((p, c) => p + c['count'], 0) / d.length;\r\n    return {\r\n        'location': location,\r\n        'date': date,\r\n        'count': count,\r\n        'measurements': 'This sample object is aggregated'\r\n    };\r\n}\n\n//# sourceURL=webpack:///./src/js/sampling-strategy.js?");

/***/ }),

/***/ "./src/js/statistics.js":
/*!******************************!*\
  !*** ./src/js/statistics.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/* harmony import */ var _timeseries_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeseries.js */ \"./src/js/timeseries.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global $, d3*/\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet domSelector = '#statistics-table > tbody:nth-child(2)';\r\n/**\r\n * Initialize the div with the svg element\r\n */\r\nfunction updateStatisticsModal() {\r\n    $(domSelector).empty();\r\n    let data = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getStatisticData\"])();\r\n    let tableString = '';\r\n\r\n    let markerEmtpyRow = data[0][0];\r\n\r\n    data = data.sort(compare);\r\n    let minMax = [d3.min(data, function(d) {\r\n            return d[15];\r\n        }),\r\n        d3.max(data, function(d) {\r\n            return d[15];\r\n        })\r\n    ];\r\n\r\n    let colorScale = d3.scaleSqrt()\r\n        .domain(minMax)\r\n        .range(['#fff', '#ef3b2c']);\r\n\r\n    data.forEach(function(d) {\r\n        if (markerEmtpyRow !== d[0]) {\r\n            tableString += '<tr class=\"blank-row\"></tr>';\r\n            markerEmtpyRow = d[0];\r\n        }\r\n        tableString += '<tr id=\"' + (d[0] + '---' + d[1]) + '\" style=\"background: ' + colorScale(d[15]) + '\">';\r\n        d.forEach(function(elm) {\r\n            if (elm !== undefined) {\r\n                if (Number(elm) === elm && elm % 1 !== 0) {\r\n                    tableString += '<td>' + parseFloat(elm).toFixed(2) + '</td>';\r\n                } else {\r\n                    tableString += '<td>' + elm + '</td>';\r\n                }\r\n            } else {\r\n                tableString += '<td></td>';\r\n            }\r\n        });\r\n        tableString += '</tr>';\r\n    });\r\n    $(domSelector).append(tableString);\r\n}\r\n\r\nfunction compare(a, b) {\r\n    if (a[15] < b[15])\r\n        return 1;\r\n    if (a[15] > b[15])\r\n        return -1;\r\n    return 0;\r\n}\r\n\r\n\r\n// $('#statistics-button').on('click', function() {\r\n$('#statistics-modal').on('shown.bs.modal', function() {\r\n    updateStatisticsModal();\r\n    $('div.col-md-12:nth-child(4)').tooltip('hide');\r\n});\r\n\r\n$(domSelector).on('click', 'tr', function() {\r\n    // get the right info\r\n    let id = $(this).attr('id');\r\n    let measurement = id.split('---')[0];\r\n    // let location = id.split('---')[1];\r\n    // select the right elements in the selection process\r\n\r\n    // $('#metadata-locations').selectpicker('selectAll');\r\n    $('#metadata-measurements').selectpicker('val', measurement);\r\n    Object(_timeseries_js__WEBPACK_IMPORTED_MODULE_1__[\"updateTimeSeries\"])(measurement);\r\n\r\n    $('#statistics-modal').modal('toggle');\r\n    $('#time-series-div').removeClass('d-none');\r\n});\n\n//# sourceURL=webpack:///./src/js/statistics.js?");

/***/ }),

/***/ "./src/js/timeseries.js":
/*!******************************!*\
  !*** ./src/js/timeseries.js ***!
  \******************************/
/*! exports provided: initTimeSeries, updateTimeSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initTimeSeries\", function() { return initTimeSeries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateTimeSeries\", function() { return updateTimeSeries; });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global d3, $*/\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet headerSelector = '#time-series-div .card-header';\r\nlet mainSelector = '#time-series-div .card-body';\r\nlet svg, g;\r\n\r\n\r\nlet ordinalColorScheme;\r\nlet x, x2, y, xAxis, yAxis, gXaxis, gYaxis; //  define scales and axis\r\nlet measurement = '';\r\n\r\n\r\nlet width,\r\n    height,\r\n    margin = {\r\n        top: 10,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 70\r\n    };\r\n\r\n/**\r\n * Initialize the div with the svg element\r\n */\r\nfunction initTimeSeries() {\r\n\r\n    // get data\r\n    let metadata = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getMetaData\"])();\r\n\r\n    // get dimensions\r\n    width = $(mainSelector).width();\r\n    height = 250; // $(mainSelector).height() || 300;\r\n\r\n    // init the zoom\r\n    let zoom = d3.zoom()\r\n        .scaleExtent([1, 100])\r\n        .translateExtent([\r\n            [0, 0],\r\n            [width, height]\r\n        ])\r\n        .extent([\r\n            [0, 0],\r\n            [width, height]\r\n        ])\r\n        .on('zoom', function() {\r\n            let t = d3.event.transform;\r\n            // change scaling function\r\n            Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"setCurrentMinMax\"])(t.rescaleX(x2).domain());\r\n        });\r\n\r\n    // create the svg\r\n    svg = d3.select(mainSelector)\r\n        .classed('svg-container', true)\r\n        // to make it responsive with css\r\n        .append('svg')\r\n        .attr('height', height)\r\n        .attr('width', width)\r\n        .call(zoom);\r\n\r\n    width = width * 0.9;\r\n    height = height * 0.9;\r\n\r\n    // append a group for the elements\r\n    g = svg.append('g')\r\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n    // // create scales and axis\r\n    x = d3.scaleTime().domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])()).range([0, width]);\r\n    x2 = d3.scaleTime().domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])()).range([0, width]);\r\n\r\n    y = d3.scaleLinear().range([height, 0]).domain([0, 1]);\r\n\r\n    xAxis = d3.axisBottom(x).tickSize(0);\r\n    yAxis = d3.axisLeft(y).tickSize(0);\r\n\r\n    ordinalColorScheme = d3.scaleOrdinal(d3.schemeCategory10);\r\n    ordinalColorScheme.domain(metadata.locations);\r\n\r\n    gXaxis = g.append('g')\r\n        .attr('class', 'axis x-axis')\r\n        .attr('transform', 'translate(0,' + height + ')')\r\n        .call(xAxis);\r\n\r\n    gYaxis = g.append('g')\r\n        .attr('class', 'axis axis--y')\r\n        .call(yAxis);\r\n}\r\n\r\n/**\r\n * Update the line chart with the measurement\r\n * @param {String} measurement - chemical measurement\r\n */\r\nfunction updateTimeSeries(m) {\r\n    if (m) {\r\n        measurement = m;\r\n    }\r\n\r\n    // update the x scaling\r\n    x.domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])());\r\n    // change the header\r\n    $(headerSelector).html('Time series: ' + measurement);\r\n\r\n    let filteredData = [];\r\n    if (measurement !== '') {\r\n        filteredData = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getTimeSeriesData\"])(measurement);\r\n    }\r\n\r\n    let yMin = d3.min(filteredData, function(d) {\r\n        return d['value'];\r\n    });\r\n    if (yMin > 0) {\r\n        yMin = 0;\r\n    }\r\n\r\n    let yMax = d3.max(filteredData, function(d) {\r\n        return d['value'];\r\n    });\r\n\r\n    y.domain([yMin, yMax]);\r\n\r\n    // DATA JOIN -- sampling circles\r\n    let circles = g.selectAll('circle')\r\n        .data(filteredData);\r\n    // UPDATE -- sampling circles\r\n    circles\r\n        .enter().append('circle')\r\n        .merge(circles)\r\n        .attr('r', 5)\r\n        .attr('cx', function(d) {\r\n            return x(d['date']);\r\n        })\r\n        .attr('cy', function(d) {\r\n            return y(d['value']);\r\n        })\r\n        .attr('class', function(d) {\r\n            return 'c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate();\r\n        })\r\n        .style('fill', function(d) {\r\n            return ordinalColorScheme(d['location']);\r\n        })\r\n        .style('stroke', '#737373')\r\n        .style('stroke-width', 0.5)\r\n        // .style('opacity', function(d) {\r\n        //     opacityScale(d['value']);\r\n        // })\r\n        .on('mouseover', function(d) {\r\n            d3.selectAll('.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate())\r\n                .attr('r', 20)\r\n                .style('stroke', '#737373')\r\n                .style('stroke-width', 2);\r\n            for (let key in d) {\r\n                $('#metadata-info').append('<span class=\"badge badge-dark\">' + key + ': ' + d[key] + '</span>');\r\n            }\r\n        })\r\n        .on('mouseout', function(d) {\r\n            d3.selectAll('.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate())\r\n                .attr('r', 4)\r\n                .style('stroke', '#737373')\r\n                .style('stroke-width', 0.5);\r\n            $('#metadata-info').empty();\r\n        });\r\n    // .on('click', function(d) {\r\n    //     // console.log(d);\r\n    //     // if (typeof d['measurements'] === 'object') {\r\n    //     //     let selected = Object.keys(d['measurements']);\r\n    //     //     $('#metadata-measurements').selectpicker('val', selected);\r\n    //     // }\r\n    // });\r\n\r\n    // EXIT\r\n    circles.exit().remove();\r\n\r\n    gXaxis.call(xAxis);\r\n    gYaxis.call(yAxis);\r\n\r\n}\n\n//# sourceURL=webpack:///./src/js/timeseries.js?");

/***/ }),

/***/ "./src/js/tsne.js":
/*!************************!*\
  !*** ./src/js/tsne.js ***!
  \************************/
/*! exports provided: initTSNE, updateTSNE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initTSNE\", function() { return initTSNE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateTSNE\", function() { return updateTSNE; });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/js/data.js\");\n/*eslint-disable no-unused-lets*/\r\n/*global d3, $*/\r\n\r\n\r\n\r\n\r\nlet svg, g;\r\n\r\nlet width,\r\n    height,\r\n    margin = {\r\n        top: 30,\r\n        right: 10,\r\n        bottom: 10,\r\n        left: 70\r\n    };\r\n\r\n\r\nlet ordinalColorScheme = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\nlet x, x2, y, y2, timeScale; //  define scales and axis\r\n\r\n/**\r\n * Initialize the div with the svg element\r\n * @param {String} domSelector - To which svg to append the svg\r\n */\r\nfunction initTSNE(domSelector) {\r\n    // get data\r\n    let metadata = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getMetaData\"])();\r\n    // get dimensions\r\n    width = $(domSelector).width();\r\n    height = 500; // $(mainSelector).height() || 300;\r\n\r\n    let zoom = d3.zoom()\r\n        .scaleExtent([1, 10])\r\n        .translateExtent([\r\n            [0, 0],\r\n            [width * 0.9, height * 0.9]\r\n        ])\r\n        .extent([\r\n            [0, 0],\r\n            [width * 0.9, height * 0.9]\r\n        ])\r\n        .on('zoom', function() {\r\n            x = d3.event.transform.rescaleX(x2);\r\n            y = d3.event.transform.rescaleY(y2);\r\n            // change scaling function\r\n            updateTSNE();\r\n        });\r\n\r\n    // create the svg\r\n    svg = d3.select(domSelector)\r\n        .attr('id', 'viscontainer')\r\n        .classed('svg-container', true)\r\n        // to make it responsive with css\r\n        .append('svg')\r\n        .attr('height', height)\r\n        .attr('width', width)\r\n        .call(zoom);\r\n\r\n\r\n    // append a group for the elements\r\n    g = svg.append('g')\r\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n    width = width * 0.9;\r\n    height = height * 0.9;\r\n\r\n    let data = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getTSNEData\"])();\r\n\r\n    x = d3.scaleLinear()\r\n        .range([0, width]).domain([\r\n            d3.min(data, function(d) {\r\n                return d['x'];\r\n            }),\r\n            d3.max(data, function(d) {\r\n                return d['x'];\r\n            })\r\n        ]);\r\n\r\n    x2 = d3.scaleLinear()\r\n        .range([0, width]).domain([\r\n            d3.min(data, function(d) {\r\n                return d['x'];\r\n            }),\r\n            d3.max(data, function(d) {\r\n                return d['x'];\r\n            })\r\n        ]);\r\n\r\n    y = d3.scaleLinear()\r\n        .range([0, height])\r\n        .domain([\r\n            d3.max(data, function(d) {\r\n                return d['y'];\r\n            }),\r\n            d3.min(data, function(d) {\r\n                return d['y'];\r\n            })\r\n        ]);\r\n\r\n    y2 = d3.scaleLinear()\r\n        .range([0, height])\r\n        .domain([\r\n            d3.max(data, function(d) {\r\n                return d['y'];\r\n            }),\r\n            d3.min(data, function(d) {\r\n                return d['y'];\r\n            })\r\n        ]);\r\n\r\n    // append the axis\r\n    g.append('g')\r\n        .attr('class', 'axis x-axis')\r\n        .attr('transform', 'translate(0,' + height + ')')\r\n        .call(d3.axisBottom(x).ticks(0));\r\n\r\n    g.append('g')\r\n        .attr('class', 'axis axis--y')\r\n        .call(d3.axisLeft(y).ticks(0));\r\n\r\n    timeScale = d3.scaleTime()\r\n        .domain(Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getCurrentMinMax\"])())\r\n        .range([0.2, 1]);\r\n\r\n    ordinalColorScheme.domain(metadata['locations']);\r\n\r\n    updateTSNE();\r\n}\r\n\r\n\r\n/**\r\n * Update the tsne\r\n */\r\nfunction updateTSNE() {\r\n    let data = Object(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"getTSNEData\"])();\r\n    // filter using the zoom scales\r\n    data = data.filter(d => d['x'] >= x.domain()[0] &&\r\n        d['x'] <= x.domain()[1] &&\r\n        d['y'] <= y.domain()[0] &&\r\n        d['y'] >= y.domain()[1]);\r\n\r\n    // DATA JOIN -- sampling circles\r\n    let circles = g.selectAll('circle')\r\n        .data(data);\r\n    // UPDATE -- sampling circles\r\n    circles\r\n        .enter().append('circle')\r\n        .merge(circles)\r\n        .attr('r', 3)\r\n        .attr('cx', function(d) {\r\n            return x(d['x']);\r\n        })\r\n        .attr('cy', function(d) {\r\n            return y(d['y']);\r\n        })\r\n        .attr('class', function(d) {\r\n            return 'c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate();\r\n        })\r\n        .style('fill', function(d) {\r\n            return ordinalColorScheme(d['location']);\r\n        })\r\n        .style('opacity', function(d) {\r\n            return timeScale(d[['date']]);\r\n        })\r\n        .style('stroke', '#737373')\r\n        .style('stroke-width', 0.5)\r\n        .on('mouseover', function(d) {\r\n            let selectString = '.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate();\r\n            d3.selectAll(selectString)\r\n                .attr('r', 20)\r\n                .style('stroke', '#737373')\r\n                .style('stroke-width', 2);\r\n            // append measurement info the info fiv\r\n            if (d3.select('#sampling-stragety-div').select(selectString).data()[0]) {\r\n\r\n                let measurements = d3.select('#sampling-stragety-div').select(selectString).data()[0]['measurements'];\r\n                if (typeof measurements === 'object') {\r\n\r\n                    for (let key in measurements) {\r\n                        $('#metadata-info').append('<span class=\"badge badge-dark\">' + key + ': ' + measurements[key].join(' ; ') + '</span>');\r\n                    }\r\n                } else {\r\n                    $('#metadata-info').append('<span class=\"badge badge-dark\">' + measurements + '</span>');\r\n                }\r\n            } else {\r\n                $('#metadata-info').append('<span class=\"badge badge-dark\">' + 'They measures are filterecd using the measurement filtering' + '</span>');\r\n            }\r\n\r\n        })\r\n        .on('mouseout', function(d) {\r\n            d3.selectAll('.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate())\r\n                .attr('r', 4)\r\n                .style('stroke', '#737373')\r\n                .style('stroke-width', 0.5);\r\n            $('#metadata-info').empty();\r\n        })\r\n        .on('click', function(d) {\r\n            let selectString = '.c-' + d['location'] + '-' + d['date'].getFullYear() + d['date'].getMonth() + d['date'].getDate();\r\n            if (d3.select('#sampling-stragety-div').select(selectString).data()[0]) {\r\n                let measurements = d3.select('#sampling-stragety-div').select(selectString).data()[0]['measurements'];\r\n\r\n                if (typeof measurements === 'object') {\r\n                    let selected = Object.keys(measurements);\r\n                    $('#metadata-measurements').selectpicker('val', selected);\r\n                }\r\n            }\r\n        });\r\n\r\n    // EXIT\r\n    circles.exit().remove();\r\n\r\n    // draw lines\r\n    let line = d3.line()\r\n        .x(function(d) {\r\n            return x(d[0]);\r\n        })\r\n        .y(function(d) {\r\n            return y(d[1]);\r\n        });\r\n\r\n    let lineData = [];\r\n    g.selectAll('path').remove();\r\n    if ($('#tsne-line-button').hasClass('active')) {\r\n        let grouped = groupBy(data, 'location');\r\n        lineData = {};\r\n        // let tmp = {}\r\n        for (let key in grouped) {\r\n            grouped[key].forEach(function(d) {\r\n                if (key in lineData) {\r\n                    lineData[key]['points'].push([d['x'], d['y']]);\r\n                } else {\r\n                    lineData[key] = {\r\n                        'location': key,\r\n                        'points': [\r\n                            [d['x'], d['y']]\r\n                        ]\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        lineData = Object.values(lineData);\r\n        g.selectAll('path')\r\n            .data(lineData)\r\n            .enter().append('path')\r\n            .attr('class', 'timeline')\r\n            .attr('d', function(d) {\r\n                return line(d['points']);\r\n            })\r\n            .style('stroke', function(d) {\r\n                return ordinalColorScheme(d['location']);\r\n            });\r\n    }\r\n\r\n    // update x axis\r\n}\r\n\r\n/**\r\n * Jquery on change listeners\r\n * Update change from tsne draw line\r\n */\r\n$('#tsne-line-button').on('click', function() {\r\n    // two toggles are just a fix - change code\r\n    $('#tsne-line-button').toggleClass('active');\r\n    updateTSNE();\r\n    $('#tsne-line-button').toggleClass('active');\r\n});\r\n\r\n/**\r\n * Helper function to group an array of objects by a key\r\n * @param {array} xs\r\n * @param {string} key\r\n */\r\nfunction groupBy(xs, key) {\r\n    return xs.reduce(function(rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n    }, {});\r\n}\n\n//# sourceURL=webpack:///./src/js/tsne.js?");

/***/ })

/******/ });